var Background, BeerPoweredEngine, BoardScene, GameScene, Globals, IntroScene, Loader, LobbyScene, OptionScene, ShuffledApp, Sketch;

Globals = require('Globals');

BeerPoweredEngine = require('BeerPoweredEngine');

Background = require('Background');

Sketch = require('Sketch');

Loader = require('Loader');

IntroScene = require('IntroScene');

LobbyScene = require('LobbyScene');

BoardScene = require('BoardScene');

OptionScene = require('OptionScene');

GameScene = require('GameScene');

ShuffledApp = (function() {
  ShuffledApp.prototype._startup = true;

  ShuffledApp.prototype._mode = Globals.gameModes.onIntro;

  function ShuffledApp(screenWidth, screenHeight) {
    this.screenWidth = screenWidth;
    this.screenHeight = screenHeight;
  }

  ShuffledApp.prototype.sketch = function() {
    var $;
    $ = this;
    this.engine = new BeerPoweredEngine(this.screenWidth, this.screenHeight);
    this.game = this.engine.createScene('game', GameScene, function(finish, scene) {
      if (finish === true) {
        $.engine.goToScene(scene);
      }
    });
    this.lobby = this.engine.createScene('lobby', LobbyScene, function(finish, scene) {
      if (finish === true) {
        $.engine.goToScene(scene);
      }
    });
    this.option = this.engine.createScene('option', OptionScene, function(finish, scene) {
      if (finish === true) {
        $.engine.goToScene(scene);
      }
    });
    this.board = this.engine.createScene('board', BoardScene, function(finish, scene) {
      if (finish === true) {
        $.engine.goToScene(scene);
      }
    });
    this.intro = this.engine.createScene('intro', IntroScene, function(finish, scene) {
      if (finish === true) {
        $.engine.goToScene(scene);
      }
    });
    if (this._startup === true) {
      this.engine.goToScene('game');
    }
    return true;
  };

  return ShuffledApp;

})();

module.exports = ShuffledApp;

//# sourceMappingURL=data:application/json;base64,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LENBQUEsS0FBRCxHQUFTLElBQUMsQ0FBQSxNQUFNLENBQUMsV0FBUixDQUFvQixPQUFwQixFQUE2QixVQUE3QixFQUF5QyxTQUFDLE1BQUQsRUFBUyxLQUFULEdBQUE7QUFDOUMsTUFBQSxJQUFHLE1BQUEsS0FBVSxJQUFiO0FBQ0ksUUFBQSxDQUFDLENBQUMsTUFBTSxDQUFDLFNBQVQsQ0FBbUIsS0FBbkIsQ0FBQSxDQURKO09BRDhDO0lBQUEsQ0FBekMsQ0FwQlQsQ0FBQTtBQXlCQSxJQUFBLElBQTRCLElBQUMsQ0FBQSxRQUFELEtBQWEsSUFBekM7QUFBQSxNQUFBLElBQUMsQ0FBQSxNQUFNLENBQUMsU0FBUixDQUFrQixNQUFsQixDQUFBLENBQUE7S0F6QkE7V0EyQkEsS0E1Qkk7RUFBQSxDQUpSLENBQUE7O3FCQUFBOztJQWpCSixDQUFBOztBQUFBLE1BbURNLENBQUMsT0FBUCxHQUFpQixXQW5EakIsQ0FBQSIsImZpbGUiOiJzaHVmZmxlZC5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbIkdsb2JhbHMgPSByZXF1aXJlICdHbG9iYWxzJ1xuXG5CZWVyUG93ZXJlZEVuZ2luZSA9IHJlcXVpcmUgJ0JlZXJQb3dlcmVkRW5naW5lJ1xuQmFja2dyb3VuZCA9IHJlcXVpcmUgJ0JhY2tncm91bmQnXG5Ta2V0Y2ggPSByZXF1aXJlICdTa2V0Y2gnXG5Mb2FkZXIgPSByZXF1aXJlICdMb2FkZXInXG5cbiMgQ3VycmVudCBTY2VuZXNcbkludHJvU2NlbmUgPSByZXF1aXJlICdJbnRyb1NjZW5lJ1xuTG9iYnlTY2VuZSA9IHJlcXVpcmUgJ0xvYmJ5U2NlbmUnXG5Cb2FyZFNjZW5lID0gcmVxdWlyZSAnQm9hcmRTY2VuZSdcbk9wdGlvblNjZW5lID0gcmVxdWlyZSAnT3B0aW9uU2NlbmUnXG5HYW1lU2NlbmUgPSByZXF1aXJlICdHYW1lU2NlbmUnXG5cbiMgU2h1ZmZsZWRBcHBcbiMgVGhlIG1haW4gZW50cnkgcG9pbnQgb2YgdGhlIGFwcFxuY2xhc3MgU2h1ZmZsZWRBcHBcbiAgICBfc3RhcnR1cDogdHJ1ZSxcbiAgICBfbW9kZTogR2xvYmFscy5nYW1lTW9kZXMub25JbnRybyxcbiAgICBjb25zdHJ1Y3RvcjogKEBzY3JlZW5XaWR0aCwgQHNjcmVlbkhlaWdodCkgLT5cblxuICAgIHNrZXRjaDogLT5cbiAgICAgICAgJCA9IEBcblxuICAgICAgICBAZW5naW5lID0gbmV3IEJlZXJQb3dlcmVkRW5naW5lIEBzY3JlZW5XaWR0aCwgQHNjcmVlbkhlaWdodFxuXG4gICAgICAgIEBnYW1lID0gQGVuZ2luZS5jcmVhdGVTY2VuZSAnZ2FtZScsIEdhbWVTY2VuZSwgKGZpbmlzaCwgc2NlbmUpIC0+XG4gICAgICAgICAgICBpZiBmaW5pc2ggaXMgdHJ1ZVxuICAgICAgICAgICAgICAgICQuZW5naW5lLmdvVG9TY2VuZSBzY2VuZVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIEBsb2JieSA9IEBlbmdpbmUuY3JlYXRlU2NlbmUgJ2xvYmJ5JywgTG9iYnlTY2VuZSwgKGZpbmlzaCwgc2NlbmUpIC0+XG4gICAgICAgICAgICBpZiBmaW5pc2ggaXMgdHJ1ZVxuICAgICAgICAgICAgICAgICQuZW5naW5lLmdvVG9TY2VuZSBzY2VuZVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIEBvcHRpb24gPSBAZW5naW5lLmNyZWF0ZVNjZW5lICdvcHRpb24nLCBPcHRpb25TY2VuZSwgKGZpbmlzaCwgc2NlbmUpIC0+XG4gICAgICAgICAgICBpZiBmaW5pc2ggaXMgdHJ1ZVxuICAgICAgICAgICAgICAgICQuZW5naW5lLmdvVG9TY2VuZSBzY2VuZVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIEBib2FyZCA9IEBlbmdpbmUuY3JlYXRlU2NlbmUgJ2JvYXJkJywgQm9hcmRTY2VuZSwgKGZpbmlzaCwgc2NlbmUpIC0+XG4gICAgICAgICAgICBpZiBmaW5pc2ggaXMgdHJ1ZVxuICAgICAgICAgICAgICAgICQuZW5naW5lLmdvVG9TY2VuZSBzY2VuZVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIEBpbnRybyA9IEBlbmdpbmUuY3JlYXRlU2NlbmUgJ2ludHJvJywgSW50cm9TY2VuZSwgKGZpbmlzaCwgc2NlbmUpIC0+XG4gICAgICAgICAgICBpZiBmaW5pc2ggaXMgdHJ1ZVxuICAgICAgICAgICAgICAgICQuZW5naW5lLmdvVG9TY2VuZSBzY2VuZVxuICAgICAgICAgICAgcmV0dXJuXG5cbiAgICAgICAgQGVuZ2luZS5nb1RvU2NlbmUgJ2dhbWUnIGlmIEBfc3RhcnR1cCBpcyB0cnVlXG5cbiAgICAgICAgdHJ1ZVxuXG5tb2R1bGUuZXhwb3J0cyA9IFNodWZmbGVkQXBwXG4iXX0=