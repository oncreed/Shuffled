var Background, BeerPoweredEngine, Loader, ShuffledApp, Sketch,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

BeerPoweredEngine = require('beerpoweredengine');

Background = require('background');

Sketch = require('sketch');

Loader = require('loader');

ShuffledApp = (function() {
  function ShuffledApp(screenWidth, screenHeight) {
    this.screenWidth = screenWidth;
    this.screenHeight = screenHeight;
    this.update = __bind(this.update, this);
    this.engine = new BeerPoweredEngine(this.screenWidth, this.screenHeight);
    this.stage = new PIXI.Stage(0x000000);
    this.engine.setStage(this.stage);
    this.engine.setPoller(this.update);
    this.loader = new Loader(this.screenWidth, this.screenHeight, this.stage);
  }

  ShuffledApp.prototype.update = function(deltaTime) {
    this.loader.update(deltaTime);
  };

  ShuffledApp.prototype.sketch = function() {
    return true;
  };

  return ShuffledApp;

})();

module.exports = ShuffledApp;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNodWZmbGVkLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLDBEQUFBO0VBQUEsa0ZBQUE7O0FBQUEsaUJBQUEsR0FBb0IsT0FBQSxDQUFRLG1CQUFSLENBQXBCLENBQUE7O0FBQUEsVUFDQSxHQUFhLE9BQUEsQ0FBUSxZQUFSLENBRGIsQ0FBQTs7QUFBQSxNQUVBLEdBQVMsT0FBQSxDQUFRLFFBQVIsQ0FGVCxDQUFBOztBQUFBLE1BR0EsR0FBUyxPQUFBLENBQVEsUUFBUixDQUhULENBQUE7O0FBQUE7QUFRaUIsRUFBQSxxQkFBRSxXQUFGLEVBQWdCLFlBQWhCLEdBQUE7QUFDVCxJQURVLElBQUMsQ0FBQSxjQUFBLFdBQ1gsQ0FBQTtBQUFBLElBRHdCLElBQUMsQ0FBQSxlQUFBLFlBQ3pCLENBQUE7QUFBQSwyQ0FBQSxDQUFBO0FBQUEsSUFBQSxJQUFDLENBQUEsTUFBRCxHQUFjLElBQUEsaUJBQUEsQ0FBa0IsSUFBQyxDQUFBLFdBQW5CLEVBQWdDLElBQUMsQ0FBQSxZQUFqQyxDQUFkLENBQUE7QUFBQSxJQUNBLElBQUMsQ0FBQSxLQUFELEdBQWEsSUFBQSxJQUFJLENBQUMsS0FBTCxDQUFXLFFBQVgsQ0FEYixDQUFBO0FBQUEsSUFFQSxJQUFDLENBQUEsTUFBTSxDQUFDLFFBQVIsQ0FBaUIsSUFBQyxDQUFBLEtBQWxCLENBRkEsQ0FBQTtBQUFBLElBR0EsSUFBQyxDQUFBLE1BQU0sQ0FBQyxTQUFSLENBQWtCLElBQUMsQ0FBQSxNQUFuQixDQUhBLENBQUE7QUFBQSxJQUtBLElBQUMsQ0FBQSxNQUFELEdBQWMsSUFBQSxNQUFBLENBQU8sSUFBQyxDQUFBLFdBQVIsRUFBcUIsSUFBQyxDQUFBLFlBQXRCLEVBQW9DLElBQUMsQ0FBQSxLQUFyQyxDQUxkLENBRFM7RUFBQSxDQUFiOztBQUFBLHdCQVFBLE1BQUEsR0FBUSxTQUFDLFNBQUQsR0FBQTtBQUNKLElBQUEsSUFBQyxDQUFBLE1BQU0sQ0FBQyxNQUFSLENBQWUsU0FBZixDQUFBLENBREk7RUFBQSxDQVJSLENBQUE7O0FBQUEsd0JBWUEsTUFBQSxHQUFRLFNBQUEsR0FBQTtXQUNKLEtBREk7RUFBQSxDQVpSLENBQUE7O3FCQUFBOztJQVJKLENBQUE7O0FBQUEsTUF1Qk0sQ0FBQyxPQUFQLEdBQWlCLFdBdkJqQixDQUFBIiwiZmlsZSI6InNodWZmbGVkLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiQmVlclBvd2VyZWRFbmdpbmUgPSByZXF1aXJlICdiZWVycG93ZXJlZGVuZ2luZSdcbkJhY2tncm91bmQgPSByZXF1aXJlICdiYWNrZ3JvdW5kJ1xuU2tldGNoID0gcmVxdWlyZSAnc2tldGNoJ1xuTG9hZGVyID0gcmVxdWlyZSAnbG9hZGVyJ1xuXG4jIFNodWZmbGVkQXBwXG4jIFRoZSBtYWluIGVudHJ5IHBvaW50IG9mIHRoZSBhcHBcbmNsYXNzIFNodWZmbGVkQXBwXG4gICAgY29uc3RydWN0b3I6IChAc2NyZWVuV2lkdGgsIEBzY3JlZW5IZWlnaHQpIC0+XG4gICAgICAgIEBlbmdpbmUgPSBuZXcgQmVlclBvd2VyZWRFbmdpbmUgQHNjcmVlbldpZHRoLCBAc2NyZWVuSGVpZ2h0XG4gICAgICAgIEBzdGFnZSA9IG5ldyBQSVhJLlN0YWdlIDB4MDAwMDAwXG4gICAgICAgIEBlbmdpbmUuc2V0U3RhZ2UgQHN0YWdlXG4gICAgICAgIEBlbmdpbmUuc2V0UG9sbGVyIEB1cGRhdGVcblxuICAgICAgICBAbG9hZGVyID0gbmV3IExvYWRlciBAc2NyZWVuV2lkdGgsIEBzY3JlZW5IZWlnaHQsIEBzdGFnZVxuXG4gICAgdXBkYXRlOiAoZGVsdGFUaW1lKSA9PlxuICAgICAgICBAbG9hZGVyLnVwZGF0ZSBkZWx0YVRpbWVcbiAgICAgICAgcmV0dXJuXG5cbiAgICBza2V0Y2g6IC0+XG4gICAgICAgIHRydWVcblxubW9kdWxlLmV4cG9ydHMgPSBTaHVmZmxlZEFwcFxuXG4iXX0=