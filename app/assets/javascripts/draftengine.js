var DraftEngine,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

DraftEngine = (function() {
  function DraftEngine(screenWidth, screenHeight) {
    this.screenWidth = screenWidth;
    this.screenHeight = screenHeight;
    this.animate = __bind(this.animate, this);
    this.init();
  }

  DraftEngine.prototype.init = function() {
    var canvas, context, drawLine;
    this.renderer = PIXI.autoDetectRenderer(this.screenWidth, this.screenHeight);
    document.body.appendChild(this.renderer.view);
    this.stats = new Stats;
    document.body.appendChild(this.stats.domElement);
    this.stage = new PIXI.Stage(0x00ff00);
    canvas = document.createElement('canvas');
    canvas.width = this.screenWidth;
    canvas.height = this.screenHeight;
    context = canvas.getContext('2d');
    drawLine = function(fX, fY, tX, tY, width, color) {
      context.beginPath();
      context.moveTo(fX, fY);
      context.lineTo(tX, tY);
      context.lineWidth = width;
      context.strokeStyle = color;
      return context.stroke();
    };
    drawLine(57, 0, 57, 450, 114, '#808080');
    drawLine(171, 0, 171, 450, 114, '#ffff00');
    drawLine(285, 0, 285, 450, 114, '#00ffff');
    drawLine(399, 0, 399, 450, 114, '#00ff00');
    drawLine(513, 0, 513, 450, 114, '#ff00ff');
    drawLine(627, 0, 627, 450, 114, '#ff0000');
    drawLine(741, 0, 741, 450, 114, '#0000ff');
    drawLine(100, 450, 100, 500, 200, '#0000ff');
    drawLine(300, 450, 300, 500, 200, '#ff00ff');
    drawLine(500, 450, 500, 500, 200, '#00ffff');
    drawLine(700, 450, 700, 500, 200, '#ffffff');
    drawLine(200, 500, 200, 600, 400, '#ffffff');
    drawLine(600, 500, 600, 600, 400, '#000000');
    this.sprite = new PIXI.Sprite(PIXI.Texture.fromCanvas(canvas));
    this.stage.addChild(this.sprite);
    window.renderer = this.renderer;
    window.animate = this.animate;
    window.stats = this.stats;
    window.stage = this.stage;
    requestAnimationFrame(this.animate);
  };

  DraftEngine.prototype.setStage = function(stage) {
    this.stage = stage;
    return window.stage = this.stage;
  };

  DraftEngine.prototype.animate = function() {
    this.stats.begin();
    if (this.stage != null) {
      this.renderer.render(this.stage);
    }
    this.stats.end();
    requestAnimationFrame(this.animate);
  };

  return DraftEngine;

})();

module.exports = DraftEngine;

//# sourceMappingURL=data:application/json;base64,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QUFqQixDQXRDQSxDQUFBO0FBQUEsSUF3Q0EsTUFBTSxDQUFDLFFBQVAsR0FBa0IsSUFBQyxDQUFBLFFBeENuQixDQUFBO0FBQUEsSUF5Q0EsTUFBTSxDQUFDLE9BQVAsR0FBaUIsSUFBQyxDQUFBLE9BekNsQixDQUFBO0FBQUEsSUEwQ0EsTUFBTSxDQUFDLEtBQVAsR0FBZSxJQUFDLENBQUEsS0ExQ2hCLENBQUE7QUFBQSxJQTJDQSxNQUFNLENBQUMsS0FBUCxHQUFlLElBQUMsQ0FBQSxLQTNDaEIsQ0FBQTtBQUFBLElBNkNBLHFCQUFBLENBQXNCLElBQUMsQ0FBQSxPQUF2QixDQTdDQSxDQURFO0VBQUEsQ0FITixDQUFBOztBQUFBLHdCQW9EQSxRQUFBLEdBQVUsU0FBQyxLQUFELEdBQUE7QUFDTixJQUFBLElBQUMsQ0FBQSxLQUFELEdBQVMsS0FBVCxDQUFBO1dBQ0EsTUFBTSxDQUFDLEtBQVAsR0FBZSxJQUFDLENBQUEsTUFGVjtFQUFBLENBcERWLENBQUE7O0FBQUEsd0JBd0RBLE9BQUEsR0FBUyxTQUFBLEdBQUE7QUFDTCxJQUFBLElBQUMsQ0FBQSxLQUFLLENBQUMsS0FBUCxDQUFBLENBQUEsQ0FBQTtBQUVBLElBQUEsSUFBRyxrQkFBSDtBQUNJLE1BQUEsSUFBQyxDQUFBLFFBQVEsQ0FBQyxNQUFWLENBQWlCLElBQUMsQ0FBQSxLQUFsQixDQUFBLENBREo7S0FGQTtBQUFBLElBS0EsSUFBQyxDQUFBLEtBQUssQ0FBQyxHQUFQLENBQUEsQ0FMQSxDQUFBO0FBQUEsSUFPQSxxQkFBQSxDQUFzQixJQUFDLENBQUEsT0FBdkIsQ0FQQSxDQURLO0VBQUEsQ0F4RFQsQ0FBQTs7cUJBQUE7O0lBREosQ0FBQTs7QUFBQSxNQXFFTSxDQUFDLE9BQVAsR0FBaUIsV0FyRWpCLENBQUEiLCJmaWxlIjoiZHJhZnRlbmdpbmUuanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmNsYXNzIERyYWZ0RW5naW5lXG4gICAgY29uc3RydWN0b3I6IChAc2NyZWVuV2lkdGgsIEBzY3JlZW5IZWlnaHQpIC0+XG4gICAgICAgIEBpbml0KClcblxuICAgIGluaXQ6IC0+XG4gICAgICAgIEByZW5kZXJlciA9IFBJWEkuYXV0b0RldGVjdFJlbmRlcmVyIEBzY3JlZW5XaWR0aCwgQHNjcmVlbkhlaWdodFxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkIEByZW5kZXJlci52aWV3XG5cbiAgICAgICAgQHN0YXRzID0gbmV3IFN0YXRzXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQgQHN0YXRzLmRvbUVsZW1lbnRcblxuICAgICAgICBAc3RhZ2UgPSBuZXcgUElYSS5TdGFnZSAweDAwZmYwMFxuXG4gICAgICAgIGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgJ2NhbnZhcydcbiAgICAgICAgY2FudmFzLndpZHRoID0gQHNjcmVlbldpZHRoXG4gICAgICAgIGNhbnZhcy5oZWlnaHQgPSBAc2NyZWVuSGVpZ2h0XG5cbiAgICAgICAgY29udGV4dCA9IGNhbnZhcy5nZXRDb250ZXh0ICcyZCdcbiAgICAgICAgZHJhd0xpbmUgPSAoZlgsIGZZLCB0WCwgdFksIHdpZHRoLCBjb2xvcikgLT5cbiAgICAgICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKClcbiAgICAgICAgICAgIGNvbnRleHQubW92ZVRvIGZYLCBmWVxuICAgICAgICAgICAgY29udGV4dC5saW5lVG8gdFgsIHRZXG4gICAgICAgICAgICBjb250ZXh0LmxpbmVXaWR0aCA9IHdpZHRoXG4gICAgICAgICAgICBjb250ZXh0LnN0cm9rZVN0eWxlID0gY29sb3JcbiAgICAgICAgICAgIGNvbnRleHQuc3Ryb2tlKClcblxuICAgICAgICBkcmF3TGluZSAgNTcsICAgMCwgIDU3LCA0NTAsIDExNCwgJyM4MDgwODAnXG4gICAgICAgIGRyYXdMaW5lIDE3MSwgICAwLCAxNzEsIDQ1MCwgMTE0LCAnI2ZmZmYwMCdcbiAgICAgICAgZHJhd0xpbmUgMjg1LCAgIDAsIDI4NSwgNDUwLCAxMTQsICcjMDBmZmZmJ1xuICAgICAgICBkcmF3TGluZSAzOTksICAgMCwgMzk5LCA0NTAsIDExNCwgJyMwMGZmMDAnXG4gICAgICAgIGRyYXdMaW5lIDUxMywgICAwLCA1MTMsIDQ1MCwgMTE0LCAnI2ZmMDBmZidcbiAgICAgICAgZHJhd0xpbmUgNjI3LCAgIDAsIDYyNywgNDUwLCAxMTQsICcjZmYwMDAwJ1xuICAgICAgICBkcmF3TGluZSA3NDEsICAgMCwgNzQxLCA0NTAsIDExNCwgJyMwMDAwZmYnXG5cbiAgICAgICAgZHJhd0xpbmUgMTAwLCA0NTAsIDEwMCwgNTAwLCAyMDAsICcjMDAwMGZmJ1xuICAgICAgICBkcmF3TGluZSAzMDAsIDQ1MCwgMzAwLCA1MDAsIDIwMCwgJyNmZjAwZmYnXG4gICAgICAgIGRyYXdMaW5lIDUwMCwgNDUwLCA1MDAsIDUwMCwgMjAwLCAnIzAwZmZmZidcbiAgICAgICAgZHJhd0xpbmUgNzAwLCA0NTAsIDcwMCwgNTAwLCAyMDAsICcjZmZmZmZmJ1xuXG4gICAgICAgIGRyYXdMaW5lIDIwMCwgNTAwLCAyMDAsIDYwMCwgNDAwLCAnI2ZmZmZmZidcbiAgICAgICAgZHJhd0xpbmUgNjAwLCA1MDAsIDYwMCwgNjAwLCA0MDAsICcjMDAwMDAwJ1xuXG4gICAgICAgIEBzcHJpdGUgPSBuZXcgUElYSS5TcHJpdGUgUElYSS5UZXh0dXJlLmZyb21DYW52YXMgY2FudmFzXG4gICAgICAgIEBzdGFnZS5hZGRDaGlsZCBAc3ByaXRlXG5cbiAgICAgICAgd2luZG93LnJlbmRlcmVyID0gQHJlbmRlcmVyXG4gICAgICAgIHdpbmRvdy5hbmltYXRlID0gQGFuaW1hdGVcbiAgICAgICAgd2luZG93LnN0YXRzID0gQHN0YXRzXG4gICAgICAgIHdpbmRvdy5zdGFnZSA9IEBzdGFnZVxuXG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSBAYW5pbWF0ZVxuICAgICAgICByZXR1cm5cblxuICAgIHNldFN0YWdlOiAoc3RhZ2UpIC0+XG4gICAgICAgIEBzdGFnZSA9IHN0YWdlXG4gICAgICAgIHdpbmRvdy5zdGFnZSA9IEBzdGFnZVxuXG4gICAgYW5pbWF0ZTogPT5cbiAgICAgICAgQHN0YXRzLmJlZ2luKClcblxuICAgICAgICBpZiBAc3RhZ2U/XG4gICAgICAgICAgICBAcmVuZGVyZXIucmVuZGVyIEBzdGFnZVxuXG4gICAgICAgIEBzdGF0cy5lbmQoKVxuXG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSBAYW5pbWF0ZVxuICAgICAgICByZXR1cm5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IERyYWZ0RW5naW5lXG4iXX0=