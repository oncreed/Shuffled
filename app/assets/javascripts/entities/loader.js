var Background, Loader, ProgressBar, Sketch, SystemText, globals;

globals = require('sh-globals');

Background = require('background');

Sketch = require('sketch');

ProgressBar = require('progressbar');

SystemText = require('systemtext');

Loader = (function() {
  function Loader(screenWidth, screenHeight, stage) {
    var $, tween;
    this.screenWidth = screenWidth;
    this.screenHeight = screenHeight;
    this.stage = stage;
    $ = this;
    this.tasksDone = false;
    this.tasksCount = 0;
    this.tasksCompleted = 0;
    this.tradeOff = false;
    this.textures = [PIXI.Texture.fromImage('/assets/images/lost_kids_contest.jpg'), PIXI.Texture.fromImage('/assets/images/pursuit_blue.png'), PIXI.Texture.fromImage('/assets/images/pursuit.png')];
    this.myFilter = new PIXI.RGBSplitFilter;
    this.background = new Background(this.textures[0]);
    this.background.anchor.x = 0.5;
    this.background.anchor.y = 0.5;
    this.background.position.x = this.screenWidth / 2;
    this.background.position.y = this.screenHeight / 2;
    this.background.addToStage(this.stage);
    this.logoNoFill = new Sketch(this.textures[1]);
    this.logoNoFill.anchor.x = 0.5;
    this.logoNoFill.anchor.y = 0.5;
    this.logoNoFill.position.x = this.screenWidth / 2;
    this.logoNoFill.position.y = this.screenHeight / 2;
    this.logoNoFill.scale.x = 0.2;
    this.logoNoFill.scale.y = 0.2;
    this.logoNoFill.addToStage(this.stage);
    this.logo = new Sketch(this.textures[2]);
    this.logo.anchor.x = 0.5;
    this.logo.anchor.y = 0.5;
    this.logo.position.x = this.screenWidth / 2;
    this.logo.position.y = this.screenHeight / 2;
    this.logo.scale.x = 0.2;
    this.logo.scale.y = 0.2;
    this.logo.alpha = 0.0;
    this.logo.addToStage(this.stage);
    this.startButton = new SystemText('Play', {
      font: 'bold 42px Anton',
      align: 'center',
      fill: '#3e1707',
      stroke: '#a4410e',
      strokeThickness: 5
    });
    this.startButton.anchor.x = 0.5;
    this.startButton.anchor.y = 0.5;
    this.startButton.position.x = this.screenWidth / 2;
    this.startButton.position.y = this.screenWidth / 2 + 90;
    this.startButton.alpha = 0.0;
    this.startButton.interactive = true;
    this.startButton.mouseover = function(data) {};
    this.startButton.mouseout = function(data) {};
    this.startButton.mousedown = function(data) {
      $.startButton.scale.x = 0.8;
      $.startButton.scale.y = 0.8;
      $.tradeOff = true;
    };
    this.startButton.mouseup = function(data) {
      $.startButton.scale.x = 1.0;
      $.startButton.scale.y = 1.0;
    };
    this.startButton.click = function(data) {
      $.background.filters = [$.myFilter];
    };
    this.startButton.touchstart = function(data) {};
    this.startButton.touchend = function(data) {};
    this.startButton.tap = function(data) {};
    this.startButton.addToStage(this.stage);
    this.loadSound = new Howl({
      urls: ['/assets/sounds/flo_rida.mp3'],
      autoplay: false,
      loop: true,
      onload: function() {
        return console.log('finished loading sound');
      }
    });
    tween = new TWEEN.Tween({
      alpha: 0.0
    }).to({
      alpha: 1.0
    }, 9000).easing(TWEEN.Easing.Elastic.InOut).onUpdate(function() {
      $.logo.alpha = this.alpha;
    }).onComplete(function() {
      return $.startButton.alpha = 1.0;
    }).start();
  }

  Loader.prototype.taskToLoad = function(count) {
    return this.tasksCount = count;
  };

  Loader.prototype.addToFinishedTask = function() {
    if (!this.tasksCount === this.tasksCompleted) {
      return this.tasksCompleted += 1;
    } else {
      return this.tasksDone = true;
    }
  };

  Loader.prototype.update = function(deltaTime) {};

  return Loader;

})();

module.exports = Loader;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudGl0aWVzL2xvYWRlci5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSw0REFBQTs7QUFBQSxPQUFBLEdBQVUsT0FBQSxDQUFRLFlBQVIsQ0FBVixDQUFBOztBQUFBLFVBRUEsR0FBYSxPQUFBLENBQVEsWUFBUixDQUZiLENBQUE7O0FBQUEsTUFHQSxHQUFTLE9BQUEsQ0FBUSxRQUFSLENBSFQsQ0FBQTs7QUFBQSxXQUlBLEdBQWMsT0FBQSxDQUFRLGFBQVIsQ0FKZCxDQUFBOztBQUFBLFVBS0EsR0FBYSxPQUFBLENBQVEsWUFBUixDQUxiLENBQUE7O0FBQUE7QUFRaUIsRUFBQSxnQkFBRSxXQUFGLEVBQWdCLFlBQWhCLEVBQStCLEtBQS9CLEdBQUE7QUFDVCxRQUFBLFFBQUE7QUFBQSxJQURVLElBQUMsQ0FBQSxjQUFBLFdBQ1gsQ0FBQTtBQUFBLElBRHdCLElBQUMsQ0FBQSxlQUFBLFlBQ3pCLENBQUE7QUFBQSxJQUR1QyxJQUFDLENBQUEsUUFBQSxLQUN4QyxDQUFBO0FBQUEsSUFBQSxDQUFBLEdBQUksSUFBSixDQUFBO0FBQUEsSUFFQSxJQUFDLENBQUEsU0FBRCxHQUFhLEtBRmIsQ0FBQTtBQUFBLElBR0EsSUFBQyxDQUFBLFVBQUQsR0FBYyxDQUhkLENBQUE7QUFBQSxJQUlBLElBQUMsQ0FBQSxjQUFELEdBQWtCLENBSmxCLENBQUE7QUFBQSxJQUtBLElBQUMsQ0FBQSxRQUFELEdBQVksS0FMWixDQUFBO0FBQUEsSUFNQSxJQUFDLENBQUEsUUFBRCxHQUFZLENBQ1IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFiLENBQXVCLHNDQUF2QixDQURRLEVBRVIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFiLENBQXVCLGlDQUF2QixDQUZRLEVBR1IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFiLENBQXVCLDRCQUF2QixDQUhRLENBTlosQ0FBQTtBQUFBLElBbUJBLElBQUMsQ0FBQSxRQUFELEdBQVksR0FBQSxDQUFBLElBQVEsQ0FB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QSxNQUFBLEtBQUEsRUFBTyxHQUFQO0tBRFEsQ0FFWCxDQUFDLEVBRlUsQ0FHUjtBQUFBLE1BQUEsS0FBQSxFQUFPLEdBQVA7S0FIUSxFQUlWLElBSlUsQ0FJTCxDQUFDLE1BSkksQ0FJRyxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUp4QixDQUk4QixDQUFDLFFBSi9CLENBSXlDLFNBQUEsR0FBQTtBQUNqRCxNQUFBLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBUCxHQUFlLElBQUMsQ0FBQSxLQUFoQixDQURpRDtJQUFBLENBSnpDLENBT1gsQ0FBQyxVQVBVLENBT0UsU0FBQSxHQUFBO2FBQ1YsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxLQUFkLEdBQXNCLElBRFo7SUFBQSxDQVBGLENBU1gsQ0FBQyxLQVRVLENBQUEsQ0E5RlosQ0FEUztFQUFBLENBQWI7O0FBQUEsbUJBMkdBLFVBQUEsR0FBWSxTQUFDLEtBQUQsR0FBQTtXQUNSLElBQUMsQ0FBQSxVQUFELEdBQWMsTUFETjtFQUFBLENBM0daLENBQUE7O0FBQUEsbUJBOEdBLGlCQUFBLEdBQW1CLFNBQUEsR0FBQTtBQUNmLElBQUEsSUFBRyxDQUFBLElBQUssQ0FBQSxVQUFMLEtBQW1CLElBQUMsQ0FBQSxjQUF2QjthQUNJLElBQUMsQ0FBQSxjQUFELElBQW1CLEVBRHZCO0tBQUEsTUFBQTthQUdJLElBQUMsQ0FBQSxTQUFELEdBQWEsS0FIakI7S0FEZTtFQUFBLENBOUduQixDQUFBOztBQUFBLG1CQW9IQSxNQUFBLEdBQVEsU0FBQyxTQUFELEdBQUEsQ0FwSFIsQ0FBQTs7Z0JBQUE7O0lBUkosQ0FBQTs7QUFBQSxNQTRJTSxDQUFDLE9BQVAsR0FBaUIsTUE1SWpCLENBQUEiLCJmaWxlIjoiZW50aXRpZXMvbG9hZGVyLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiZ2xvYmFscyA9IHJlcXVpcmUgJ3NoLWdsb2JhbHMnXG5cbkJhY2tncm91bmQgPSByZXF1aXJlICdiYWNrZ3JvdW5kJ1xuU2tldGNoID0gcmVxdWlyZSAnc2tldGNoJ1xuUHJvZ3Jlc3NCYXIgPSByZXF1aXJlICdwcm9ncmVzc2JhcidcblN5c3RlbVRleHQgPSByZXF1aXJlICdzeXN0ZW10ZXh0J1xuXG5jbGFzcyBMb2FkZXJcbiAgICBjb25zdHJ1Y3RvcjogKEBzY3JlZW5XaWR0aCwgQHNjcmVlbkhlaWdodCwgQHN0YWdlKSAtPlxuICAgICAgICAkID0gQFxuXG4gICAgICAgIEB0YXNrc0RvbmUgPSBmYWxzZVxuICAgICAgICBAdGFza3NDb3VudCA9IDBcbiAgICAgICAgQHRhc2tzQ29tcGxldGVkID0gMFxuICAgICAgICBAdHJhZGVPZmYgPSBmYWxzZVxuICAgICAgICBAdGV4dHVyZXMgPSBbXG4gICAgICAgICAgICBQSVhJLlRleHR1cmUuZnJvbUltYWdlICcvYXNzZXRzL2ltYWdlcy9sb3N0X2tpZHNfY29udGVzdC5qcGcnXG4gICAgICAgICAgICBQSVhJLlRleHR1cmUuZnJvbUltYWdlICcvYXNzZXRzL2ltYWdlcy9wdXJzdWl0X2JsdWUucG5nJ1xuICAgICAgICAgICAgUElYSS5UZXh0dXJlLmZyb21JbWFnZSAnL2Fzc2V0cy9pbWFnZXMvcHVyc3VpdC5wbmcnXG4gICAgICAgIF1cblxuICAgICAgICAjI0BiYWNrZ3JvdW5kTWFza1JhZGl1cyA9IDUwXG4gICAgICAgICMjQGJhY2tncm91bmRNYXNrID0gbmV3IFBJWEkuR3JhcGhpY3NcbiAgICAgICAgIyNAYmFja2dyb3VuZE1hc2suYmVnaW5GaWxsKDB4ZmZmZmZmKVxuICAgICAgICAjI0BiYWNrZ3JvdW5kTWFzay5kcmF3Q2lyY2xlIDQwMCwgMzIwLCBAYmFja2dyb3VuZE1hc2tSYWRpdXNcbiAgICAgICAgIyNAYmFja2dyb3VuZE1hc2suZW5kRmlsbCgpXG4gICAgICAgICMjQHN0YWdlLmFkZENoaWxkIEBiYWNrZ3JvdW5kTWFza1xuXG4gICAgICAgIEBteUZpbHRlciA9IG5ldyBQSVhJLlJHQlNwbGl0RmlsdGVyO1xuXG4gICAgICAgIEBiYWNrZ3JvdW5kID0gbmV3IEJhY2tncm91bmQgQHRleHR1cmVzWzBdXG4gICAgICAgIEBiYWNrZ3JvdW5kLmFuY2hvci54ID0gMC41XG4gICAgICAgIEBiYWNrZ3JvdW5kLmFuY2hvci55ID0gMC41XG4gICAgICAgIEBiYWNrZ3JvdW5kLnBvc2l0aW9uLnggPSBAc2NyZWVuV2lkdGggLyAyXG4gICAgICAgIEBiYWNrZ3JvdW5kLnBvc2l0aW9uLnkgPSBAc2NyZWVuSGVpZ2h0IC8gMlxuICAgICAgICBAYmFja2dyb3VuZC5hZGRUb1N0YWdlIEBzdGFnZVxuXG4gICAgICAgICMjQGJhY2tncm91bmQubWFzayA9IEBiYWNrZ3JvdW5kTWFza1xuXG4gICAgICAgIEBsb2dvTm9GaWxsID0gbmV3IFNrZXRjaCBAdGV4dHVyZXNbMV1cbiAgICAgICAgQGxvZ29Ob0ZpbGwuYW5jaG9yLnggPSAwLjVcbiAgICAgICAgQGxvZ29Ob0ZpbGwuYW5jaG9yLnkgPSAwLjVcbiAgICAgICAgQGxvZ29Ob0ZpbGwucG9zaXRpb24ueCA9IEBzY3JlZW5XaWR0aCAvIDJcbiAgICAgICAgQGxvZ29Ob0ZpbGwucG9zaXRpb24ueSA9IEBzY3JlZW5IZWlnaHQgLyAyXG4gICAgICAgIEBsb2dvTm9GaWxsLnNjYWxlLnggPSAwLjJcbiAgICAgICAgQGxvZ29Ob0ZpbGwuc2NhbGUueSA9IDAuMlxuICAgICAgICBAbG9nb05vRmlsbC5hZGRUb1N0YWdlIEBzdGFnZVxuXG4gICAgICAgIEBsb2dvID0gbmV3IFNrZXRjaCBAdGV4dHVyZXNbMl1cbiAgICAgICAgQGxvZ28uYW5jaG9yLnggPSAwLjVcbiAgICAgICAgQGxvZ28uYW5jaG9yLnkgPSAwLjVcbiAgICAgICAgQGxvZ28ucG9zaXRpb24ueCA9IEBzY3JlZW5XaWR0aCAvIDJcbiAgICAgICAgQGxvZ28ucG9zaXRpb24ueSA9IEBzY3JlZW5IZWlnaHQgLyAyXG4gICAgICAgIEBsb2dvLnNjYWxlLnggPSAwLjJcbiAgICAgICAgQGxvZ28uc2NhbGUueSA9IDAuMlxuICAgICAgICBAbG9nby5hbHBoYSA9IDAuMFxuICAgICAgICBAbG9nby5hZGRUb1N0YWdlIEBzdGFnZVxuXG4gICAgICAgIEBzdGFydEJ1dHRvbiA9IG5ldyBTeXN0ZW1UZXh0ICdQbGF5JyxcbiAgICAgICAgICAgIGZvbnQ6ICdib2xkIDQycHggQW50b24nXG4gICAgICAgICAgICBhbGlnbjogJ2NlbnRlcidcbiAgICAgICAgICAgIGZpbGw6ICcjM2UxNzA3J1xuICAgICAgICAgICAgc3Ryb2tlOiAnI2E0NDEwZSdcbiAgICAgICAgICAgIHN0cm9rZVRoaWNrbmVzczogNVxuICAgICAgICBAc3RhcnRCdXR0b24uYW5jaG9yLnggPSAwLjVcbiAgICAgICAgQHN0YXJ0QnV0dG9uLmFuY2hvci55ID0gMC41XG4gICAgICAgIEBzdGFydEJ1dHRvbi5wb3NpdGlvbi54ID0gQHNjcmVlbldpZHRoIC8gMlxuICAgICAgICBAc3RhcnRCdXR0b24ucG9zaXRpb24ueSA9IEBzY3JlZW5XaWR0aCAvIDIgKyA5MFxuICAgICAgICBAc3RhcnRCdXR0b24uYWxwaGEgPSAwLjBcbiAgICAgICAgQHN0YXJ0QnV0dG9uLmludGVyYWN0aXZlID0gdHJ1ZVxuXG4gICAgICAgIEBzdGFydEJ1dHRvbi5tb3VzZW92ZXIgPSAoZGF0YSkgLT5cbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICBAc3RhcnRCdXR0b24ubW91c2VvdXQgPSAoZGF0YSkgLT5cbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICBAc3RhcnRCdXR0b24ubW91c2Vkb3duID0gKGRhdGEpIC0+XG4gICAgICAgICAgICAkLnN0YXJ0QnV0dG9uLnNjYWxlLnggPSAwLjhcbiAgICAgICAgICAgICQuc3RhcnRCdXR0b24uc2NhbGUueSA9IDAuOFxuICAgICAgICAgICAgJC50cmFkZU9mZiA9IHRydWVcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICBAc3RhcnRCdXR0b24ubW91c2V1cCA9IChkYXRhKSAtPlxuICAgICAgICAgICAgJC5zdGFydEJ1dHRvbi5zY2FsZS54ID0gMS4wXG4gICAgICAgICAgICAkLnN0YXJ0QnV0dG9uLnNjYWxlLnkgPSAxLjBcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICBAc3RhcnRCdXR0b24uY2xpY2sgPSAoZGF0YSkgLT5cbiAgICAgICAgICAgICQuYmFja2dyb3VuZC5maWx0ZXJzID0gWyQubXlGaWx0ZXJdXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgQHN0YXJ0QnV0dG9uLnRvdWNoc3RhcnQgPSAoZGF0YSkgLT5cbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICBAc3RhcnRCdXR0b24udG91Y2hlbmQgPSAoZGF0YSkgLT5cbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICBAc3RhcnRCdXR0b24udGFwID0gKGRhdGEpIC0+XG4gICAgICAgICAgICByZXR1cm5cblxuICAgICAgICBAc3RhcnRCdXR0b24uYWRkVG9TdGFnZSBAc3RhZ2VcblxuICAgICAgICBAbG9hZFNvdW5kID0gbmV3IEhvd2xcbiAgICAgICAgICAgIHVybHM6IFsnL2Fzc2V0cy9zb3VuZHMvZmxvX3JpZGEubXAzJ11cbiAgICAgICAgICAgIGF1dG9wbGF5OiBmYWxzZVxuICAgICAgICAgICAgbG9vcDogdHJ1ZVxuICAgICAgICAgICAgb25sb2FkOiAtPlxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nICdmaW5pc2hlZCBsb2FkaW5nIHNvdW5kJ1xuXG4gICAgICAgIHR3ZWVuID0gbmV3IFRXRUVOLlR3ZWVuKFxuICAgICAgICAgICAgYWxwaGE6IDAuMFxuICAgICAgICApLnRvKFxuICAgICAgICAgICAgYWxwaGE6IDEuMFxuICAgICAgICAsIDkwMDApLmVhc2luZyhUV0VFTi5FYXNpbmcuRWxhc3RpYy5Jbk91dCkub25VcGRhdGUoIC0+XG4gICAgICAgICAgICAkLmxvZ28uYWxwaGEgPSBAYWxwaGFcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICApLm9uQ29tcGxldGUoIC0+XG4gICAgICAgICAgICAkLnN0YXJ0QnV0dG9uLmFscGhhID0gMS4wXG4gICAgICAgICkuc3RhcnQoKVxuXG5cbiAgICB0YXNrVG9Mb2FkOiAoY291bnQpIC0+XG4gICAgICAgIEB0YXNrc0NvdW50ID0gY291bnRcblxuICAgIGFkZFRvRmluaXNoZWRUYXNrOiAoKSAtPlxuICAgICAgICBpZiBub3QgQHRhc2tzQ291bnQgaXMgQHRhc2tzQ29tcGxldGVkXG4gICAgICAgICAgICBAdGFza3NDb21wbGV0ZWQgKz0gMVxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBAdGFza3NEb25lID0gdHJ1ZVxuXG4gICAgdXBkYXRlOiAoZGVsdGFUaW1lKSAtPlxuICAgICAgICAjI2lmIEB0cmFkZU9mZiBpcyB0cnVlXG4gICAgICAgICMjICAgIEBiYWNrZ3JvdW5kTWFza1JhZGl1cyArPSAwLjFcbiAgICAgICAgIyMgICAgQGJhY2tncm91bmRNYXNrLmJlZ2luRmlsbCgpXG4gICAgICAgICMjICAgIEBiYWNrZ3JvdW5kTWFzay5kcmF3Q2lyY2xlIDQwMCwgMzIwLCBAYmFja2dyb3VuZE1hc2tSYWRpdXNcbiAgICAgICAgIyMgICAgQGJhY2tncm91bmRNYXNrLmVuZEZpbGwoKVxuICAgICAgICAjIyAgICBAYmFja2dyb3VuZC5tYXNrID0gQGJhY2tncm91bmRNYXNrXG5cbiAgICAgICAgIyNpZiBAdGFza3NEb25lXG4gICAgICAgICMjICAgICMjIGRvIGNoYW5nZSBtb2RlIGhlcmVcbiAgICAgICAgIyMgICAgcmV0dXJuXG4gICAgICAgICMjZWxzZVxuICAgICAgICAjIyAgICByZXR1cm5cblxuICAgICAgICByZXR1cm5cblxubW9kdWxlLmV4cG9ydHMgPSBMb2FkZXJcbiJdfQ==