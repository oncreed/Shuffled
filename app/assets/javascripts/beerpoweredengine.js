var BeerPoweredEngine,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

BeerPoweredEngine = (function() {
  function BeerPoweredEngine(screenWidth, screenHeight) {
    this.screenWidth = screenWidth;
    this.screenHeight = screenHeight;
    this.animate = __bind(this.animate, this);
    this.init();
  }

  BeerPoweredEngine.prototype.init = function() {
    var canvas, context, drawLine;
    this.renderer = PIXI.autoDetectRenderer(this.screenWidth, this.screenHeight);
    document.body.appendChild(this.renderer.view);
    this.stats = new Stats;
    document.body.appendChild(this.stats.domElement);
    this.stage = new PIXI.Stage(0x00ff00);
    canvas = document.createElement('canvas');
    canvas.width = this.screenWidth;
    canvas.height = this.screenHeight;
    context = canvas.getContext('2d');
    drawLine = function(fX, fY, tX, tY, width, color) {
      context.beginPath();
      context.moveTo(fX, fY);
      context.lineTo(tX, tY);
      context.lineWidth = width;
      context.strokeStyle = color;
      return context.stroke();
    };
    drawLine(57, 0, 57, 450, 114, '#808080');
    drawLine(171, 0, 171, 450, 114, '#ffff00');
    drawLine(285, 0, 285, 450, 114, '#00ffff');
    drawLine(399, 0, 399, 450, 114, '#00ff00');
    drawLine(513, 0, 513, 450, 114, '#ff00ff');
    drawLine(627, 0, 627, 450, 114, '#ff0000');
    drawLine(741, 0, 741, 450, 114, '#0000ff');
    drawLine(100, 450, 100, 500, 200, '#0000ff');
    drawLine(300, 450, 300, 500, 200, '#ff00ff');
    drawLine(500, 450, 500, 500, 200, '#00ffff');
    drawLine(700, 450, 700, 500, 200, '#ffffff');
    drawLine(200, 500, 200, 600, 400, '#ffffff');
    drawLine(600, 500, 600, 600, 400, '#000000');
    this.sprite = new PIXI.Sprite(PIXI.Texture.fromCanvas(canvas));
    this.stage.addChild(this.sprite);
    window.renderer = this.renderer;
    window.animate = this.animate;
    window.stats = this.stats;
    window.stage = this.stage;
    requestAnimationFrame(this.animate);
  };

  BeerPoweredEngine.prototype.setStage = function(stage) {
    this.stage = stage;
    return window.stage = this.stage;
  };

  BeerPoweredEngine.prototype.animate = function() {
    this.stats.begin();
    if (this.stage != null) {
      this.renderer.render(this.stage);
    }
    this.stats.end();
    requestAnimationFrame(this.animate);
  };

  return BeerPoweredEngine;

})();

module.exports = BeerPoweredEngine;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJlZXJwb3dlcmVkZW5naW5lLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxJQUFBLGlCQUFBO0VBQUEsa0ZBQUE7O0FBQUE7QUFDaUIsRUFBQSwyQkFBRSxXQUFGLEVBQWdCLFlBQWhCLEdBQUE7QUFDVCxJQURVLElBQUMsQ0FBQSxjQUFBLFdBQ1gsQ0FBQTtBQUFBLElBRHdCLElBQUMsQ0FBQSxlQUFBLFlBQ3pCLENBQUE7QUFBQSw2Q0FBQSxDQUFBO0FBQUEsSUFBQSxJQUFDLENBQUEsSUFBRCxDQUFBLENBQUEsQ0FEUztFQUFBLENBQWI7O0FBQUEsOEJBR0EsSUFBQSxHQUFNLFNBQUEsR0FBQTtBQUNGLFFBQUEseUJBQUE7QUFBQSxJQUFBLElBQUMsQ0FBQSxRQUFELEdBQVksSUFBSSxDQUFDLGtCQUFMLENBQXdCLElBQUMsQ0FBQSxXQUF6QixFQUFzQyxJQUFDLENBQUEsWUFBdkMsQ0FBWixDQUFBO0FBQUEsSUFDQSxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQWQsQ0FBMEIsSUFBQyxDQUFBLFFBQVEsQ0FBQyxJQUFwQyxDQURBLENBQUE7QUFBQSxJQUdBLElBQUMsQ0FBQSxLQUFELEdBQVMsR0FBQSxDQUFBLEtBSFQsQ0FBQTtBQUFBLElBSUEsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFkLENBQTBCLElBQUMsQ0FBQSxLQUFLLENBQUMsVUFBakMsQ0FKQSxDQUFBO0FBQUEsSUFNQSxJQUFDLENBQUEsS0FBRCxHQUFhLElBQUEsSUFBSSxDQUFDLEtBQUwsQ0FBVyxRQUFYLENBTmIsQ0FBQTtBQUFBLElBUUEsTUFBQSxHQUFTLFFBQVEsQ0FBQyxhQUFULENBQXVCLFFBQXZCLENBUlQsQ0FBQTtBQUFBLElBU0EsTUFBTSxDQUFDLEtBQVAsR0FBZSxJQUFDLENBQUEsV0FUaEIsQ0FBQTtBQUFBLElBVUEsTUFBTSxDQUFDLE1BQVAsR0FBZ0IsSUFBQyxDQUFBLFlBVmpCLENBQUE7QUFBQSxJQVlBLE9BQUEsR0FBVSxNQUFNLENBQUMsVUFB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LENBQUEsTUFBakIsQ0F0Q0EsQ0FBQTtBQUFBLElBd0NBLE1BQU0sQ0FBQyxRQUFQLEdBQWtCLElBQUMsQ0FBQSxRQXhDbkIsQ0FBQTtBQUFBLElBeUNBLE1BQU0sQ0FBQyxPQUFQLEdBQWlCLElBQUMsQ0FBQSxPQXpDbEIsQ0FBQTtBQUFBLElBMENBLE1BQU0sQ0FBQyxLQUFQLEdBQWUsSUFBQyxDQUFBLEtBMUNoQixDQUFBO0FBQUEsSUEyQ0EsTUFBTSxDQUFDLEtBQVAsR0FBZSxJQUFDLENBQUEsS0EzQ2hCLENBQUE7QUFBQSxJQTZDQSxxQkFBQSxDQUFzQixJQUFDLENBQUEsT0FBdkIsQ0E3Q0EsQ0FERTtFQUFBLENBSE4sQ0FBQTs7QUFBQSw4QkFvREEsUUFBQSxHQUFVLFNBQUMsS0FBRCxHQUFBO0FBQ04sSUFBQSxJQUFDLENBQUEsS0FBRCxHQUFTLEtBQVQsQ0FBQTtXQUNBLE1BQU0sQ0FBQyxLQUFQLEdBQWUsSUFBQyxDQUFBLE1BRlY7RUFBQSxDQXBEVixDQUFBOztBQUFBLDhCQXdEQSxPQUFBLEdBQVMsU0FBQSxHQUFBO0FBQ0wsSUFBQSxJQUFDLENBQUEsS0FBSyxDQUFDLEtBQVAsQ0FBQSxDQUFBLENBQUE7QUFFQSxJQUFBLElBQUcsa0JBQUg7QUFDSSxNQUFBLElBQUMsQ0FBQSxRQUFRLENBQUMsTUFBVixDQUFpQixJQUFDLENBQUEsS0FBbEIsQ0FBQSxDQURKO0tBRkE7QUFBQSxJQUtBLElBQUMsQ0FBQSxLQUFLLENBQUMsR0FBUCxDQUFBLENBTEEsQ0FBQTtBQUFBLElBT0EscUJBQUEsQ0FBc0IsSUFBQyxDQUFBLE9BQXZCLENBUEEsQ0FESztFQUFBLENBeERULENBQUE7OzJCQUFBOztJQURKLENBQUE7O0FBQUEsTUFxRU0sQ0FBQyxPQUFQLEdBQWlCLGlCQXJFakIsQ0FBQSIsImZpbGUiOiJiZWVycG93ZXJlZGVuZ2luZS5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbIlxuY2xhc3MgQmVlclBvd2VyZWRFbmdpbmVcbiAgICBjb25zdHJ1Y3RvcjogKEBzY3JlZW5XaWR0aCwgQHNjcmVlbkhlaWdodCkgLT5cbiAgICAgICAgQGluaXQoKVxuXG4gICAgaW5pdDogLT5cbiAgICAgICAgQHJlbmRlcmVyID0gUElYSS5hdXRvRGV0ZWN0UmVuZGVyZXIgQHNjcmVlbldpZHRoLCBAc2NyZWVuSGVpZ2h0XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQgQHJlbmRlcmVyLnZpZXdcblxuICAgICAgICBAc3RhdHMgPSBuZXcgU3RhdHNcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCBAc3RhdHMuZG9tRWxlbWVudFxuXG4gICAgICAgIEBzdGFnZSA9IG5ldyBQSVhJLlN0YWdlIDB4MDBmZjAwXG5cbiAgICAgICAgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCAnY2FudmFzJ1xuICAgICAgICBjYW52YXMud2lkdGggPSBAc2NyZWVuV2lkdGhcbiAgICAgICAgY2FudmFzLmhlaWdodCA9IEBzY3JlZW5IZWlnaHRcblxuICAgICAgICBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQgJzJkJ1xuICAgICAgICBkcmF3TGluZSA9IChmWCwgZlksIHRYLCB0WSwgd2lkdGgsIGNvbG9yKSAtPlxuICAgICAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKVxuICAgICAgICAgICAgY29udGV4dC5tb3ZlVG8gZlgsIGZZXG4gICAgICAgICAgICBjb250ZXh0LmxpbmVUbyB0WCwgdFlcbiAgICAgICAgICAgIGNvbnRleHQubGluZVdpZHRoID0gd2lkdGhcbiAgICAgICAgICAgIGNvbnRleHQuc3Ryb2tlU3R5bGUgPSBjb2xvclxuICAgICAgICAgICAgY29udGV4dC5zdHJva2UoKVxuXG4gICAgICAgIGRyYXdMaW5lICA1NywgICAwLCAgNTcsIDQ1MCwgMTE0LCAnIzgwODA4MCdcbiAgICAgICAgZHJhd0xpbmUgMTcxLCAgIDAsIDE3MSwgNDUwLCAxMTQsICcjZmZmZjAwJ1xuICAgICAgICBkcmF3TGluZSAyODUsICAgMCwgMjg1LCA0NTAsIDExNCwgJyMwMGZmZmYnXG4gICAgICAgIGRyYXdMaW5lIDM5OSwgICAwLCAzOTksIDQ1MCwgMTE0LCAnIzAwZmYwMCdcbiAgICAgICAgZHJhd0xpbmUgNTEzLCAgIDAsIDUxMywgNDUwLCAxMTQsICcjZmYwMGZmJ1xuICAgICAgICBkcmF3TGluZSA2MjcsICAgMCwgNjI3LCA0NTAsIDExNCwgJyNmZjAwMDAnXG4gICAgICAgIGRyYXdMaW5lIDc0MSwgICAwLCA3NDEsIDQ1MCwgMTE0LCAnIzAwMDBmZidcblxuICAgICAgICBkcmF3TGluZSAxMDAsIDQ1MCwgMTAwLCA1MDAsIDIwMCwgJyMwMDAwZmYnXG4gICAgICAgIGRyYXdMaW5lIDMwMCwgNDUwLCAzMDAsIDUwMCwgMjAwLCAnI2ZmMDBmZidcbiAgICAgICAgZHJhd0xpbmUgNTAwLCA0NTAsIDUwMCwgNTAwLCAyMDAsICcjMDBmZmZmJ1xuICAgICAgICBkcmF3TGluZSA3MDAsIDQ1MCwgNzAwLCA1MDAsIDIwMCwgJyNmZmZmZmYnXG5cbiAgICAgICAgZHJhd0xpbmUgMjAwLCA1MDAsIDIwMCwgNjAwLCA0MDAsICcjZmZmZmZmJ1xuICAgICAgICBkcmF3TGluZSA2MDAsIDUwMCwgNjAwLCA2MDAsIDQwMCwgJyMwMDAwMDAnXG5cbiAgICAgICAgQHNwcml0ZSA9IG5ldyBQSVhJLlNwcml0ZSBQSVhJLlRleHR1cmUuZnJvbUNhbnZhcyBjYW52YXNcbiAgICAgICAgQHN0YWdlLmFkZENoaWxkIEBzcHJpdGVcblxuICAgICAgICB3aW5kb3cucmVuZGVyZXIgPSBAcmVuZGVyZXJcbiAgICAgICAgd2luZG93LmFuaW1hdGUgPSBAYW5pbWF0ZVxuICAgICAgICB3aW5kb3cuc3RhdHMgPSBAc3RhdHNcbiAgICAgICAgd2luZG93LnN0YWdlID0gQHN0YWdlXG5cbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lIEBhbmltYXRlXG4gICAgICAgIHJldHVyblxuXG4gICAgc2V0U3RhZ2U6IChzdGFnZSkgLT5cbiAgICAgICAgQHN0YWdlID0gc3RhZ2VcbiAgICAgICAgd2luZG93LnN0YWdlID0gQHN0YWdlXG5cbiAgICBhbmltYXRlOiA9PlxuICAgICAgICBAc3RhdHMuYmVnaW4oKVxuXG4gICAgICAgIGlmIEBzdGFnZT9cbiAgICAgICAgICAgIEByZW5kZXJlci5yZW5kZXIgQHN0YWdlXG5cbiAgICAgICAgQHN0YXRzLmVuZCgpXG5cbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lIEBhbmltYXRlXG4gICAgICAgIHJldHVyblxuXG5cbm1vZHVsZS5leHBvcnRzID0gQmVlclBvd2VyZWRFbmdpbmVcbiJdfQ==